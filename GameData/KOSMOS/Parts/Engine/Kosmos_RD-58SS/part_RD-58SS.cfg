PART
{

// --- general parameters ---
name = Kosmos_RD-58SS
module = Part
author = Kosmos Team

// --- asset parameters ---
MODEL
{
	model = KOSMOS/Parts/Engine/Kosmos_RD-275K/model_RD-58SS_Base
	position = 0.0, 0.0, 0.0
	scale = 1.0, 1.0, 1.0
	rotation = 0, 0, 0
}

MODEL
{
	model = KOSMOS/Parts/Engine/Kosmos_RD-58SS/model_RD-58SS
	position = 0.0, 0.0, 0.0
	scale = 1.0, 1.0, 1.0
	rotation = 0, 0, 0
}
rescaleFactor = 1

// --- node definitions ---
node_stack_top = 0.0, 0.980665, 0.0, 0.0, 1.0, 0.0, 1
node_stack_bottom = 0.0, -0.9806652, 0.0, 0.0, -1.0, 0.0, 1



// --- FX definitions ---

fx_exhaustFlame_yellow = 0.0, -2, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_yellow = 0.0, -2, 0.0, 0.0, 0.0, 1.0, running
fx_exhaustFlame_blue = 0.0, -2, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -2, 0.0, 0.0, 0.0, 1.0, running
//fx_smokeTrail_light = 0.0, -2, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustSparks_flameout = 0.0, -2, 0.0, 0.0, 1.0, 0.0, flameout

// --- Sound FX definition ---


sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
TechRequired = advRocketry
entryCost = 33800
cost = 3250

category = Propulsion
subcategory = 0
title = RD-58SS
manufacturer = Kosmos Spacecraft Design Bureau 
description = After losing out to the RD-0146 in testing, the RD-58SS was sent back to be redesigned as a second-stage engine. Kosmos designers fitted it with more powerful booster pumps and increased the chamber pressure, while making sure not to compromise efficiency. The result is an engine that fits a previously-unfilled role. While the designation SS originally referred to "Second Stage," some have taken to calling it the "Super Sport" instead.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,1

// --- standard part parameters ---
mass = 1.4
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
breakingForce = 200
breakingTorque = 200
maxTemp = 3200


MODULE
{
      name = ModuleAnimateHeat
      ThermalAnim = overheat
}

MODULE
{
	name = ModuleGimbal
	gimbalTransformName = gimbal
	gimbalRange = 10
}




MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = engine_thrust
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 325
	heatProduction = 400
	//fxOffset = 0, 0, 1.5
	PROPELLANT
	{
		name = LiquidFuel
        	ratio = 0.9
		DrawGauge = True
	}
	PROPELLANT
	{
		name = Oxidizer
		ratio = 1.1
	}
	atmosphereCurve
 	{
   	 key = 0 416
  	 key = 1 361
 	}

}







MODULE
{
	name = FXModuleLookAtConstraint
	CONSTRAINLOOKFX
	{
		targetName = Piston_Lower_001
		rotatorsName = Piston_Upper_001
	}

	CONSTRAINLOOKFX
	{
		targetName = Piston_Upper_001
		rotatorsName = Piston_Lower_001
	}
	CONSTRAINLOOKFX
	{
		targetName = Piston_Lower_002
		rotatorsName = Piston_Upper_002
	}

	CONSTRAINLOOKFX
	{
		targetName = Piston_Upper_002
		rotatorsName = Piston_Lower_002
	}
	CONSTRAINLOOKFX
	{
		targetName = Piston_Lower_003
		rotatorsName = Piston_Upper_003
	}

	CONSTRAINLOOKFX
	{
		targetName = Piston_Upper_003
		rotatorsName = Piston_Lower_003
	}
	CONSTRAINLOOKFX
	{
		targetName = Piston_Lower_004
		rotatorsName = Piston_Upper_004
	}

	CONSTRAINLOOKFX
	{
		targetName = Piston_Upper_004
		rotatorsName = Piston_Lower_004
	}


}


//MODULE
//{
//	name = KM_Gimbal
//	gimbalTransformName = engine_thrust
//	
//	gimbalPitchTransformName = Y_Bearing
//	gimbalYawTransformName = X_Bearing
//	
//	yawGimbalRange = 20
//	pitchGimbalRange = 20
//	
//	// Those are the default values : 
//	enableTrim = true
//	trimX = 0
//	trimY = 0
//	enableSmoothGimbal = false
//	responseSpeed = 60  // degree per seconds
//	invertPitch = false 
//	invertYaw = false
//	invertRoll = true
//	enableRoll = true
//}



MODULE
{
	name = FSmultiAxisEngine // allows for rotating three different objects in an engine or other part. Must be three separate objects or empties.
	pitchObject =  Y_Bearing //rotates around the y axis
	yawObject = X_Bearing //rotates around the x axis
	rollObject = none // rotates around the z axis
	pitchDefaultRotation = 0,0,0
	yawDefaultRotation = 0,0,0
	rollDefaultRotation = 0,0,0
// etc can be used to add to the 0,0,0 + p,r,y rotation reset each updatew
	axisMultiplier = 15, 0, 15 // pitch, roll, yaw
}


MODULE
{
	name = FSplanePropellerSpinner
	propellerName = spinner_Fuel
	useRotorDiscSwap = 0
	rotationSpeed = 0
	thrustRPM = -120
	windmillRPM = 0.1
	spinUpTime = 2
}
MODULE
{
	name = FSplanePropellerSpinner
	propellerName = spinner_LOX
	useRotorDiscSwap = 0
	rotationSpeed = 0
	thrustRPM = 120
	windmillRPM = 0.1
	spinUpTime = 2
}
MODULE
{
	name = FSplanePropellerSpinner
	propellerName = spinner_Main
	useRotorDiscSwap = 0
	rotationSpeed = 0
	thrustRPM = 200
	windmillRPM = 0.1
	spinUpTime = 1
}

//nope below here yo
}
